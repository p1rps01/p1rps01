[2022-11-05 15:28:23,613] [builder.py:197]            [INFO]     |====================================================================================================|
[2022-11-05 15:28:23,614] [builder.py:197]            [INFO]     |                           IMDb Lowest Rated Collection in Marvel Movies                            |
[2022-11-05 15:28:23,615] [builder.py:197]            [INFO]     |====================================================================================================|
[2022-11-05 15:28:23,615] [builder.py:198]            [INFO]     |                                                                                                    |
[2022-11-05 15:28:23,615] [builder.py:203]            [INFO]     |================================ Building Definition From Templates ================================|
[2022-11-05 15:28:23,615] [builder.py:211]            [DEBUG]    |                                                                                                    |
[2022-11-05 15:28:23,615] [meta.py:128]               [DEBUG]    | Template shared                                                                                    |
[2022-11-05 15:28:23,616] [meta.py:129]               [DEBUG]    | Call: ordereddict([('name', 'shared'), ('allowed_libraries', 'movie')])                            |
[2022-11-05 15:28:23,616] [meta.py:304]               [DEBUG]    |                                                                                                    |
[2022-11-05 15:28:23,616] [meta.py:305]               [DEBUG]    | Variables: ordereddict([('name', 'shared'), ('allowed_libraries', 'movie'), ('collection_name', 'IMDb Lowest Rated'), ('mapping_name', 'IMDb Lowest Rated'), ('library_type', 'movie'), ('library_name', 'Marvel Movies'), ('collection_section', '01'), ('name_encoded', 'shared'), ('allowed_libraries_encoded', 'movie'), ('collection_name_encoded', 'IMDb%20Lowest%20Rated'), ('mapping_name_encoded', 'IMDb%20Lowest%20Rated'), ('library_type_encoded', 'movie'), ('library_name_encoded', 'Marvel%20Movies'), ('collection_section_encoded', '01'), ('collection_sort', 'IMDb Lowest Rated')]) |
[2022-11-05 15:28:23,617] [meta.py:306]               [DEBUG]    |                                                                                                    |
[2022-11-05 15:28:23,617] [meta.py:307]               [DEBUG]    | Defaults: {'collection_section': '00', 'collection_section_encoded': '00', 'sort': 'IMDb Lowest Rated', 'sort_encoded': 'IMDb%20Lowest%20Rated', 'key': 'IMDb Lowest Rated', 'key_encoded': 'IMDb%20Lowest%20Rated', 'pre': '_', 'pre_encoded': '_', 'order_<<key>>': '', 'order_<<key>>_encoded': '', 'image': 'chart/IMDb%20Lowest%20Rated', 'image_encoded': 'chart/IMDb%2520Lowest%2520Rated', 'item_radarr_tag_<<key>>': '<<item_radarr_tag>>', 'item_radarr_tag_<<key>>_encoded': '%3C%3Citem_radarr_tag%3E%3E', 'item_sonarr_tag_<<key>>': '<<item_sonarr_tag>>', 'item_sonarr_tag_<<key>>_encoded': '%3C%3Citem_sonarr_tag%3E%3E'} |
[2022-11-05 15:28:23,617] [meta.py:308]               [DEBUG]    |                                                                                                    |
[2022-11-05 15:28:23,617] [meta.py:309]               [DEBUG]    | Optional: ['use_<<key>>', 'use_<<key>>_encoded', 'allowed_libraries', 'allowed_libraries_encoded', 'collection_mode', 'collection_mode_encoded', 'visible_library_<<key>>', 'visible_library_<<key>>_encoded', 'visible_home_<<key>>', 'visible_home_<<key>>_encoded', 'visible_shared_<<key>>', 'visible_shared_<<key>>_encoded', 'item_radarr_tag', 'item_radarr_tag_encoded', 'item_sonarr_tag', 'item_sonarr_tag_encoded'] |
[2022-11-05 15:28:23,620] [meta.py:128]               [DEBUG]    | Template arr                                                                                       |
[2022-11-05 15:28:23,620] [meta.py:129]               [DEBUG]    | Call: ordereddict([('name', 'arr')])                                                               |
[2022-11-05 15:28:23,621] [meta.py:304]               [DEBUG]    |                                                                                                    |
[2022-11-05 15:28:23,621] [meta.py:305]               [DEBUG]    | Variables: ordereddict([('name', 'arr'), ('collection_name', 'IMDb Lowest Rated'), ('mapping_name', 'IMDb Lowest Rated'), ('library_type', 'movie'), ('library_name', 'Marvel Movies'), ('collection_section', '01'), ('name_encoded', 'arr'), ('collection_name_encoded', 'IMDb%20Lowest%20Rated'), ('mapping_name_encoded', 'IMDb%20Lowest%20Rated'), ('library_type_encoded', 'movie'), ('library_name_encoded', 'Marvel%20Movies'), ('collection_section_encoded', '01'), ('collection_sort', 'IMDb Lowest Rated')]) |
[2022-11-05 15:28:23,621] [meta.py:306]               [DEBUG]    |                                                                                                    |
[2022-11-05 15:28:23,622] [meta.py:307]               [DEBUG]    | Defaults: {'key': 'IMDb Lowest Rated', 'key_encoded': 'IMDb%20Lowest%20Rated', 'radarr_add_missing_<<key>>': '<<radarr_add_missing>>', 'radarr_add_missing_<<key>>_encoded': '%3C%3Cradarr_add_missing%3E%3E', 'sonarr_add_missing_<<key>>': '<<sonarr_add_missing>>', 'sonarr_add_missing_<<key>>_encoded': '%3C%3Csonarr_add_missing%3E%3E', 'radarr_folder_<<key>>': '<<radarr_folder>>', 'radarr_folder_<<key>>_encoded': '%3C%3Cradarr_folder%3E%3E', 'sonarr_folder_<<key>>': '<<sonarr_folder>>', 'sonarr_folder_<<key>>_encoded': '%3C%3Csonarr_folder%3E%3E', 'radarr_tag_<<key>>': '<<radarr_tag>>', 'radarr_tag_<<key>>_encoded': '%3C%3Cradarr_tag%3E%3E', 'sonarr_tag_<<key>>': '<<sonarr_tag>>', 'sonarr_tag_<<key>>_encoded': '%3C%3Csonarr_tag%3E%3E'} |
[2022-11-05 15:28:23,622] [meta.py:308]               [DEBUG]    |                                                                                                    |
[2022-11-05 15:28:23,622] [meta.py:309]               [DEBUG]    | Optional: ['radarr_add_missing', 'radarr_add_missing_encoded', 'sonarr_add_missing', 'sonarr_add_missing_encoded', 'radarr_folder', 'radarr_folder_encoded', 'sonarr_folder', 'sonarr_folder_encoded', 'radarr_tag', 'radarr_tag_encoded', 'sonarr_tag', 'sonarr_tag_encoded'] |
[2022-11-05 15:28:23,624] [meta.py:128]               [DEBUG]    | Template custom                                                                                    |
[2022-11-05 15:28:23,625] [meta.py:129]               [DEBUG]    | Call: ordereddict([('name', 'custom')])                                                            |
[2022-11-05 15:28:23,625] [meta.py:304]               [DEBUG]    |                                                                                                    |
[2022-11-05 15:28:23,625] [meta.py:305]               [DEBUG]    | Variables: ordereddict([('name', 'custom'), ('collection_name', 'IMDb Lowest Rated'), ('mapping_name', 'IMDb Lowest Rated'), ('library_type', 'movie'), ('library_name', 'Marvel Movies'), ('collection_section', '01'), ('name_encoded', 'custom'), ('collection_name_encoded', 'IMDb%20Lowest%20Rated'), ('mapping_name_encoded', 'IMDb%20Lowest%20Rated'), ('library_type_encoded', 'movie'), ('library_name_encoded', 'Marvel%20Movies'), ('collection_section_encoded', '01'), ('collection_sort', 'IMDb Lowest Rated')]) |
[2022-11-05 15:28:23,625] [meta.py:306]               [DEBUG]    |                                                                                                    |
[2022-11-05 15:28:23,626] [meta.py:307]               [DEBUG]    | Defaults: {'collection_order': 'custom', 'collection_order_encoded': 'custom', 'collection_order_<<key>>': '<<collection_order>>', 'collection_order_<<key>>_encoded': '%3C%3Ccollection_order%3E%3E'} |
[2022-11-05 15:28:23,626] [meta.py:308]               [DEBUG]    |                                                                                                    |
[2022-11-05 15:28:23,626] [meta.py:309]               [DEBUG]    | Optional: []                                                                                       |
[2022-11-05 15:28:23,626] [meta.py:370]               [DEBUG]    |                                                                                                    |
[2022-11-05 15:28:23,627] [meta.py:371]               [DEBUG]    | Final Template Attributes: {'allowed_library_types': ['movie'], 'ignore_blank_results': True, 'item_radarr_tag': '<<item_radarr_tag_IMDb Lowest Rated>>', 'item_sonarr_tag': '<<item_sonarr_tag_IMDb Lowest Rated>>', 'sort_title': '!01_<<order_IMDb Lowest Rated>>IMDb Lowest Rated', 'url_poster': 'https://raw.githubusercontent.com/meisnate12/Plex-Meta-Manager-Images/master/chart/IMDb%20Lowest%20Rated.jpg', 'radarr_add_missing': '<<radarr_add_missing_IMDb Lowest Rated>>', 'sonarr_add_missing': '<<sonarr_add_missing_IMDb Lowest Rated>>', 'radarr_folder': '<<radarr_folder_IMDb Lowest Rated>>', 'sonarr_folder': '<<sonarr_folder_IMDb Lowest Rated>>', 'radarr_tag': '<<radarr_tag_IMDb Lowest Rated>>', 'sonarr_tag': '<<sonarr_tag_IMDb Lowest Rated>>', 'collection_order': 'custom', 'sync_mode': 'sync', 'cache_builders': 1} |
[2022-11-05 15:28:23,627] [meta.py:372]               [DEBUG]    |                                                                                                    |
[2022-11-05 15:28:23,627] [builder.py:219]            [INFO]     |============================= Validating IMDb Lowest Rated Attributes ==============================|
[2022-11-05 15:28:23,627] [builder.py:232]            [DEBUG]    |                                                                                                    |
[2022-11-05 15:28:23,628] [builder.py:233]            [DEBUG]    | Validating Method: allowed_library_types                                                           |
[2022-11-05 15:28:23,628] [builder.py:236]            [DEBUG]    | Value: ['movie']                                                                                   |
[2022-11-05 15:28:23,629] [builder.py:474]            [DEBUG]    |                                                                                                    |
[2022-11-05 15:28:23,629] [builder.py:475]            [DEBUG]    | Validating Method: ignore_blank_results                                                            |
[2022-11-05 15:28:23,630] [builder.py:476]            [DEBUG]    | Value: True                                                                                        |
[2022-11-05 15:28:23,630] [builder.py:488]            [DEBUG]    |                                                                                                    |
[2022-11-05 15:28:23,630] [builder.py:489]            [DEBUG]    | Validating Method: sync_mode                                                                       |
[2022-11-05 15:28:23,630] [builder.py:493]            [DEBUG]    | Value: sync                                                                                        |
[2022-11-05 15:28:23,630] [builder.py:609]            [DEBUG]    |                                                                                                    |
[2022-11-05 15:28:23,631] [builder.py:610]            [DEBUG]    | Validating Method: collection_order                                                                |
[2022-11-05 15:28:23,631] [builder.py:611]            [DEBUG]    | Value: custom                                                                                      |
[2022-11-05 15:28:23,631] [builder.py:627]            [DEBUG]    |                                                                                                    |
[2022-11-05 15:28:23,631] [builder.py:631]            [DEBUG]    | Validating Method: variables                                                                       |
[2022-11-05 15:28:23,631] [builder.py:632]            [DEBUG]    | Value: ordereddict([('key', 'lowest')])                                                            |
[2022-11-05 15:28:23,632] [plex_meta_manager.py:696]  [DEBUG]    | Traceback (most recent call last):                                                                 |
                                                                 |   File "//plex_meta_manager.py", line 559, in run_collection
                                                                 |     builder = CollectionBuilder(config, metadata, mapping_name, collection_attrs, library=library, extra=output_str)
                                                                 |   File "/modules/builder.py", line 725, in __init__
                                                                 |     raise Failed(f"{self.Type} Error: {method_final} attribute not supported")
                                                                 | modules.util.Failed: Collection Error: variables attribute not supported
                                                                 | 
[2022-11-05 15:28:23,633] [plex_meta_manager.py:697]  [ERROR]    | Collection Error: variables attribute not supported
[2022-11-05 15:28:23,633] [plex_meta_manager.py:708]  [INFO]     | 
[2022-11-05 15:28:23,633] [plex_meta_manager.py:709]  [INFO]     |====================================================================================================|
[2022-11-05 15:28:23,633] [plex_meta_manager.py:709]  [INFO]     |                               Finished IMDb Lowest Rated Collection                                |
[2022-11-05 15:28:23,633] [plex_meta_manager.py:709]  [INFO]     |                                    Collection Run Time: 0:00:00                                    |
[2022-11-05 15:28:23,634] [plex_meta_manager.py:709]  [INFO]     |====================================================================================================|
