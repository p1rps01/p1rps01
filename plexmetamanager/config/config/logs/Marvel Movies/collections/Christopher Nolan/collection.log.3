[2022-11-05 19:18:28,189] [builder.py:197]            [INFO]     |====================================================================================================|
[2022-11-05 19:18:28,190] [builder.py:197]            [INFO]     |                           Christopher Nolan Collection in Marvel Movies                            |
[2022-11-05 19:18:28,190] [builder.py:197]            [INFO]     |====================================================================================================|
[2022-11-05 19:18:28,190] [builder.py:198]            [INFO]     |                                                                                                    |
[2022-11-05 19:18:28,190] [builder.py:203]            [INFO]     |================================ Building Definition From Templates ================================|
[2022-11-05 19:18:28,190] [builder.py:211]            [DEBUG]    |                                                                                                    |
[2022-11-05 19:18:28,190] [meta.py:128]               [DEBUG]    | Template Person                                                                                    |
[2022-11-05 19:18:28,191] [meta.py:129]               [DEBUG]    | Call: ordereddict([('name', 'Person'), ('person', 525)])                                           |
[2022-11-05 19:18:28,191] [meta.py:304]               [DEBUG]    |                                                                                                    |
[2022-11-05 19:18:28,191] [meta.py:305]               [DEBUG]    | Variables: ordereddict([('name', 'Person'), ('person', 525), ('collection_name', 'Christopher Nolan'), ('mapping_name', 'Christopher Nolan'), ('library_type', 'movie'), ('library_name', 'Marvel Movies'), ('name_encoded', 'Person'), ('person_encoded', '525'), ('collection_name_encoded', 'Christopher%20Nolan'), ('mapping_name_encoded', 'Christopher%20Nolan'), ('library_type_encoded', 'movie'), ('library_name_encoded', 'Marvel%20Movies'), ('collection_sort', 'Christopher Nolan')]) |
[2022-11-05 19:18:28,191] [meta.py:306]               [DEBUG]    |                                                                                                    |
[2022-11-05 19:18:28,191] [meta.py:307]               [DEBUG]    | Defaults: {}                                                                                       |
[2022-11-05 19:18:28,191] [meta.py:308]               [DEBUG]    |                                                                                                    |
[2022-11-05 19:18:28,192] [meta.py:309]               [DEBUG]    | Optional: []                                                                                       |
[2022-11-05 19:18:28,193] [meta.py:370]               [DEBUG]    |                                                                                                    |
[2022-11-05 19:18:28,193] [meta.py:371]               [DEBUG]    | Final Template Attributes: {'smart_filter': {'any': {'actor': 'tmdb', 'director': 'tmdb', 'writer': 'tmdb', 'producer': 'tmdb'}, 'sort_by': 'random', 'validate': False}, 'tmdb_person': 525, 'sort_title': '+5_Christopher Nolan'} |
[2022-11-05 19:18:28,193] [meta.py:372]               [DEBUG]    |                                                                                                    |
[2022-11-05 19:18:28,193] [builder.py:219]            [INFO]     |============================= Validating Christopher Nolan Attributes ==============================|
[2022-11-05 19:18:28,193] [builder.py:500]            [DEBUG]    |                                                                                                    |
[2022-11-05 19:18:28,193] [builder.py:501]            [DEBUG]    | Validating Method: tmdb_person                                                                     |
[2022-11-05 19:18:28,193] [builder.py:505]            [DEBUG]    | Value: 525                                                                                         |
[2022-11-05 19:18:28,204] [builder.py:1722]           [INFO]     |                                                                                                    |
[2022-11-05 19:18:28,204] [builder.py:1723]           [INFO]     | Validating Method: smart_filter                                                                    |
[2022-11-05 19:18:28,204] [builder.py:1729]           [DEBUG]    | Value: {'any': {'actor': 'tmdb', 'director': 'tmdb', 'writer': 'tmdb', 'producer': 'tmdb'}, 'sort_by': 'random', 'validate': False} |
[2022-11-05 19:18:28,767] [builder.py:1979]           [ERROR]    | Plex Error: actor: Christopher Nolan not found                                                     |
                                                                 | Options: ['Aldis Hodge', 'Amy Adams', 'Andrew Garfield', 'Angelina Jolie', 'Awkwafina', 'Ben Affleck', 'Ben Mendelsohn', 'Benedict Cumberbatch', 'Blake Lively', 'Brie Larson', 'Chadwick Boseman', 'Chiwetel Ejiofor', 'Chris Evans', 'Chris Hemsworth', 'Chris Pratt', 'Ciarán Hinds', 'Dave Bautista', 'Don Cheadle', 'Ed Skrein', 'Edward Norton', 'Elizabeth Olsen', 'Emma Stone', 'Eric Bana', 'Eva Mendes', 'Evangeline Lilly', 'Florence Pugh', 'Gemma Chan', 'Gwyneth Paltrow', 'Henry Cavill', 'Hugo Weaving', 'Ike Amadi', 'Ioan Gruffudd', 'Jake Gyllenhaal', 'James Franco', 'Jamie Foxx', 'Jeff Bridges', 'Jennifer Connelly', 'Jesse Eisenberg', 'Jessica Alba', 'Jimmi Simpson', 'Josh Brolin', 'Kirsten Dunst', 'Liv Tyler', "Lupita Nyong'o", 'Mark Ruffalo', 'Michael B. Jordan', 'Michael Douglas', 'Michael Keaton', 'Michael Peña', 'Michael Shannon', 'Morena Baccarin', 'Nicolas Cage', 'Paul Rudd', 'Peter Sarsgaard', 'Rachel McAdams', 'Rachel Weisz', 'Rhys Ifans', 'Richard Madden', 'Robert Downey Jr.', 'Ryan Reynolds', 'Sam Elliott', 'Samuel L. Jackson', 'Scarlett Johansson', 'Sebastian Stan', 'Simu Liu', 'Terrence Howard', 'Tim Roth', 'Tobey Maguire', 'Tom Holland', 'Tommy Lee Jones', 'Tony Leung Chiu-wai', 'Violante Placido', 'Willem Dafoe', 'Zendaya', 'Zoe Saldaña']
[2022-11-05 19:18:28,998] [builder.py:1979]           [ERROR]    | Plex Error: director: Christopher Nolan not found
                                                                 | Options: ['Ang Lee', 'Anna Boden', 'Anthony Russo', 'Brian Taylor', 'Cate Shortland', 'Chloé Zhao', 'David Leitch', 'Destin Daniel Cretton', 'James Gunn', 'Jeff Wamester', 'Joe Johnston', 'Joe Russo', 'Jon Favreau', 'Jon Watts', 'Joss Whedon', 'Louis Leterrier', 'Marc Webb', 'Mark Neveldine', 'Mark Steven Johnson', 'Martin Campbell', 'Peyton Reed', 'Ryan Coogler', 'Ryan Fleck', 'Sam Raimi', 'Scott Derrickson', 'Shane Black', 'Tim Miller', 'Tim Story', 'Zack Snyder']
[2022-11-05 19:18:29,162] [builder.py:1900]           [DEBUG]    | Smart URL: ?type=1&sort=random&push=1&writer=47363&or=1&producer=47402&pop=1
[2022-11-05 19:18:29,162] [builder.py:627]            [DEBUG]    | 
[2022-11-05 19:18:29,162] [builder.py:631]            [DEBUG]    | Validating Method: sort_title
[2022-11-05 19:18:29,162] [builder.py:632]            [DEBUG]    | Value: +5_Christopher Nolan
[2022-11-05 19:18:29,167] [plex.py:790]               [DEBUG]    | 
[2022-11-05 19:18:29,167] [plex.py:793]               [DEBUG]    | Looking for: Christopher Nolan
[2022-11-05 19:18:29,167] [builder.py:797]            [INFO]     | 
[2022-11-05 19:18:29,167] [builder.py:798]            [INFO]     | Validation Successful
[2022-11-05 19:18:29,168] [plex_meta_manager.py:561]  [INFO]     | 
[2022-11-05 19:18:29,168] [plex_meta_manager.py:563]  [INFO]     |=============================== Running Christopher Nolan Collection ===============================|
[2022-11-05 19:18:29,168] [plex_meta_manager.py:569]  [INFO]     |                                                                                                    |
[2022-11-05 19:18:29,168] [plex_meta_manager.py:570]  [INFO]     | Smart Movie Filter                                                                                 |
                                                                 | Sort By: random
                                                                 | Validate: False
                                                                 | Filter:
                                                                 |   Match any of the following:
                                                                 |     Writer is Christopher Nolan
                                                                 |     Producer is Christopher Nolan
[2022-11-05 19:18:29,179] [plex_meta_manager.py:624]  [INFO]     | 
[2022-11-05 19:18:29,179] [plex_meta_manager.py:625]  [INFO]     | Collection Minimum: 2 not met for Christopher Nolan Collection
[2022-11-05 19:18:29,180] [plex_meta_manager.py:708]  [INFO]     | 
[2022-11-05 19:18:29,180] [plex_meta_manager.py:709]  [INFO]     |====================================================================================================|
[2022-11-05 19:18:29,180] [plex_meta_manager.py:709]  [INFO]     |                               Finished Christopher Nolan Collection                                |
[2022-11-05 19:18:29,180] [plex_meta_manager.py:709]  [INFO]     |                                    Collection Run Time: 0:00:00                                    |
[2022-11-05 19:18:29,180] [plex_meta_manager.py:709]  [INFO]     |====================================================================================================|
